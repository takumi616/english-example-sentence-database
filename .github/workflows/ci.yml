on:
  #Run  workflows when a commit is pushed to main branch.
  push:
    branches:
      - main
  #Run workflows when pull request is created or updated.
  pull_request:
name: test
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 5432:5432
        #volumes:
         # - ./.tools/postgres:/var/lib/postgresql/schema
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: english_vocabulary_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: postgres
          POSTGRES_SSLMODE: disable
    steps:
    #Install and set up golang on runner
    - name: Set up golang
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.20'
    #Check out my repository and download it to runner 
    #to run actions against my code.
    - name: Checkout
      uses: actions/checkout@v4
    - name: DB migration
      run: |
        apt-get install -y --no-install-recommends wget ca-certificates
        rm -rf /var/lib/apt/lists/*
        wget --no-check-certificate https://github.com/sqldef/sqldef/releases/download/v0.16.15/psqldef_linux_amd64.tar.gz 
        tar xf psqldef_linux_amd64.tar.gz 
        mv psqldef /usr/local/bin/psqldef 
        rm psqldef_linux_amd64.tar.gz 
        chmod +x /usr/local/bin/psqldef
        psqldef -U postgres -p 5432 english_vocabulary_test <./.tools/postgres/schema.sql
    #Generate test coverage
    - name: Run tests with coverage report output
      run: go test ./... -coverprofile=coverage.out -covermode=atomic -coverpkg=./...
    #Report test coverage with pull request
    - name: Report coverage
      uses: k1LoW/octocov-action@v1
